# 6. В одномерном массиве найти сумму элементов, находящихся между минимальным и
# максимальным элементами. Сами минимальный и максимальный элементы в сумму не
# включать.

from random import randint
import time

def sum_between_min_max():
    lst = [randint(-30, 30) for i in range(2000)]

    print(lst)

    a_max_index = lst.index(max(lst))
    a_min_index = lst.index(min(lst))

    print('Максимальный элемент списка', max(lst), 'на позиции', a_max_index + 1)
    print('Минимальный элемент списка', min(lst), 'на позиции', a_min_index + 1)

    if a_min_index < a_max_index:
        del lst[a_max_index:]
        del lst[0:a_min_index + 1]

    elif a_min_index > a_max_index:
        del lst[a_min_index:]
        del lst[0: a_max_index + 1]
    else:
        return print('Между максимальным и минимальным элементами ничего нет')
    return print('Массив между максимальным и минимальным элементами:', lst, ', сумма его элементов', sum(lst))


if __name__ == '__main__':
    time_s = time.time()
    sum_between_min_max()
    time_f = time.time()
    print(time_f - time_s)
# # FIN


# Асимптотический анализ:
#   выполняется перебор одномерного массива для поиска максимального числа (сложность n)
#   выполняется перебор одномерного массива для поиска минимального числа (сложность n)
#   удаление элементов не входящих в промежуток между максимальным и минимальным значениями (еще 2 перебора массива)
#   вычисление суммы оставшихся элементов в максимальном случае - n - 2 элементов
# Оцениваю сложность алгоритма как О(n) - 4n переборов массива + вычисление суммы - линейная сложность.
# Время обработки массива из 2000 элементов 0.02401590347290039 с
# Время обработки массива из 20 000 элементов 0.04202842712402344 с
# Время обработки массива из 200 000 элементов 0.42629408836364746 с (увеличил разброс величин с -3000 до 3000)
# Для lst = [randint(-300000, 300000) for i in range(2000000)] (два миллиона значений в диапазоне от минус до плюс 300 тысяч) - 4.480997800827026
# Для 20kk значений в диапазоне от -3кк до 3кк время составило: 48.03713822364807 секунд.
# Вывод: явная линейная сложность.
